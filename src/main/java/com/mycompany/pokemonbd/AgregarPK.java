package com.mycompany.pokemonbd;

import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Random;

/**
 *
 * @author hiram
 */
public class AgregarPK extends javax.swing.JPanel implements ActionListener{
    public String idEntrenador;
    BD mBD = new BD();
    ArrayList lista = mBD.obtenerEspecies();
    String[] modelo = new String[]{"Nombre", "PP"};
    DefaultTableModel dtm = new DefaultTableModel(modelo, 4) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    /**
     * Creates new form AgregarPK
     */
    public AgregarPK(String idEntrenador) {
        initComponents();
        idT.setText(generarID());
        this.idEntrenador = idEntrenador;
        System.out.println(idEntrenador + "En agregarPK");
        llenarEspecies();
        agregarListenerSeleccionEspecie();
        llenarDatosEspecie();
        dtm = (DefaultTableModel) tabla.getModel();
        tabla.setModel(dtm);
        llenarMovimientos();
        agregarListenerSeleccionMovimientos();
        pp_text.setText(mBD.obtenerPP(movimientos_combo.getItemAt(0)));
        agregarListenerEstadisticas();
        agregarListenerSeleccionNaturaleza();
        calcularEstadisticas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Agregar = new javax.swing.JPanel();
        titulo = new javax.swing.JLabel();
        imagen = new javax.swing.JPanel();
        perfil = new javax.swing.JLabel();
        especie_Label = new javax.swing.JLabel();
        naturalezas_combo = new javax.swing.JComboBox<>();
        mote_label = new javax.swing.JLabel();
        mote = new javax.swing.JTextField();
        naturaleza_label = new javax.swing.JLabel();
        especies_combo = new javax.swing.JComboBox<>();
        objeto_label = new javax.swing.JLabel();
        objeto_combo = new javax.swing.JComboBox<>();
        genero_label = new javax.swing.JLabel();
        genero_combo = new javax.swing.JComboBox<>();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        estadisticas = new javax.swing.JPanel();
        base_label = new javax.swing.JLabel();
        ps_label = new javax.swing.JLabel();
        atq_label = new javax.swing.JLabel();
        defensa_label = new javax.swing.JLabel();
        atqEspecial_label = new javax.swing.JLabel();
        defEspecial_label = new javax.swing.JLabel();
        velocidad_label = new javax.swing.JLabel();
        total_label = new javax.swing.JLabel();
        totalBase_t = new javax.swing.JTextField();
        velocidadBase_t = new javax.swing.JTextField();
        defespecialBase_t = new javax.swing.JTextField();
        atqespecialBase_t = new javax.swing.JTextField();
        defensaBase_t = new javax.swing.JTextField();
        ataqueBase_t = new javax.swing.JTextField();
        psBase_t = new javax.swing.JTextField();
        IV_label = new javax.swing.JLabel();
        psIVS_t = new javax.swing.JTextField();
        atqIVs_t = new javax.swing.JTextField();
        defIVs_t = new javax.swing.JTextField();
        atqEspecialIVs_t = new javax.swing.JTextField();
        defEspecialIVs_t = new javax.swing.JTextField();
        velocidadIVs_t = new javax.swing.JTextField();
        totalIVS_t = new javax.swing.JTextField();
        totalEVs_t = new javax.swing.JTextField();
        velocidadEVs_t = new javax.swing.JTextField();
        defEspecialEVs_t = new javax.swing.JTextField();
        atqEspecialEVs_t = new javax.swing.JTextField();
        defEVs_t = new javax.swing.JTextField();
        atqEVs_t = new javax.swing.JTextField();
        psEVs_t = new javax.swing.JTextField();
        EVs_label = new javax.swing.JLabel();
        Estadistica_label = new javax.swing.JLabel();
        pstotal_t = new javax.swing.JTextField();
        atqtotal_t = new javax.swing.JTextField();
        deftotal_t = new javax.swing.JTextField();
        atqEspecialtotal_t = new javax.swing.JTextField();
        defEspecialtotal_t = new javax.swing.JTextField();
        velocidadtotal_t = new javax.swing.JTextField();
        movimientos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        movimientos_label = new javax.swing.JLabel();
        movimientos_combo = new javax.swing.JComboBox<>();
        añadirMov = new javax.swing.JButton();
        pp_label = new javax.swing.JLabel();
        pp_text = new javax.swing.JTextField();
        maspp_label = new javax.swing.JLabel();
        maspp_text = new javax.swing.JTextField();
        maspp = new javax.swing.JLabel();
        eliminarMov = new javax.swing.JButton();
        subir = new javax.swing.JButton();
        bajar = new javax.swing.JButton();
        id_label = new javax.swing.JLabel();
        idT = new javax.swing.JTextField();
        numPokedex_label = new javax.swing.JLabel();
        numPokedex = new javax.swing.JTextField();
        agregarPK = new javax.swing.JButton();
        hab_especial_label = new javax.swing.JLabel();
        habilidad_combo = new javax.swing.JComboBox<>();

        setMinimumSize(new java.awt.Dimension(713, 703));
        setPreferredSize(new java.awt.Dimension(713, 703));

        Agregar.setBackground(new java.awt.Color(22, 26, 33));
        Agregar.setForeground(new java.awt.Color(255, 255, 255));
        Agregar.setMinimumSize(new java.awt.Dimension(548, 411));
        Agregar.setLayout(null);

        titulo.setFont(new java.awt.Font("Segoe UI", 1, 40)); // NOI18N
        titulo.setForeground(new java.awt.Color(255, 255, 255));
        titulo.setText("Agregar Pokemón");
        Agregar.add(titulo);
        titulo.setBounds(20, 10, 360, 54);

        imagen.setBackground(new java.awt.Color(13, 17, 23));
        imagen.setForeground(new java.awt.Color(13, 17, 23));
        imagen.setLayout(null);
        imagen.add(perfil);
        perfil.setBounds(0, 0, 210, 210);

        Agregar.add(imagen);
        imagen.setBounds(40, 90, 210, 210);

        especie_Label.setFont(new java.awt.Font("Segoe UI", 1, 21)); // NOI18N
        especie_Label.setForeground(new java.awt.Color(255, 255, 255));
        especie_Label.setText("Elegir especie");
        Agregar.add(especie_Label);
        especie_Label.setBounds(270, 80, 140, 29);

        naturalezas_combo.setBackground(new java.awt.Color(13, 17, 23));
        naturalezas_combo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        naturalezas_combo.setForeground(new java.awt.Color(255, 255, 255));
        naturalezas_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activa", "Afable", "Agitada", "Alegre", "Alocada", "Amable", "Audaz", "Cauta", "Dócil", "Firme", "Floja", "Fuerte", "Grosera", "Huraña", "Ingenua", "Mansa", "Miedosa", "Modesta", "Osada", "Pícara", "Plácida", "Rara", "Serena", "Seria", "Tímida" }));
        Agregar.add(naturalezas_combo);
        naturalezas_combo.setBounds(270, 260, 400, 30);

        mote_label.setFont(new java.awt.Font("Segoe UI", 1, 21)); // NOI18N
        mote_label.setForeground(new java.awt.Color(255, 255, 255));
        mote_label.setText("Mote");
        Agregar.add(mote_label);
        mote_label.setBounds(270, 150, 140, 29);

        mote.setBackground(new java.awt.Color(13, 17, 23));
        mote.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mote.setForeground(new java.awt.Color(255, 255, 255));
        mote.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mote.setBorder(null);
        mote.setCaretColor(new java.awt.Color(255, 255, 255));
        mote.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        Agregar.add(mote);
        mote.setBounds(270, 190, 400, 30);

        naturaleza_label.setFont(new java.awt.Font("Segoe UI", 1, 21)); // NOI18N
        naturaleza_label.setForeground(new java.awt.Color(255, 255, 255));
        naturaleza_label.setText("Naturaleza");
        Agregar.add(naturaleza_label);
        naturaleza_label.setBounds(270, 230, 140, 29);

        especies_combo.setBackground(new java.awt.Color(13, 17, 23));
        especies_combo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        especies_combo.setForeground(new java.awt.Color(255, 255, 255));
        Agregar.add(especies_combo);
        especies_combo.setBounds(270, 120, 400, 30);

        objeto_label.setFont(new java.awt.Font("Segoe UI", 1, 21)); // NOI18N
        objeto_label.setForeground(new java.awt.Color(255, 255, 255));
        objeto_label.setText("Objeto");
        Agregar.add(objeto_label);
        objeto_label.setBounds(40, 310, 140, 29);

        objeto_combo.setBackground(new java.awt.Color(13, 17, 23));
        objeto_combo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        objeto_combo.setForeground(new java.awt.Color(255, 255, 255));
        objeto_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguno", "Agua fresca", "Agua fresca", "Antihielo", "Antiparalizador", "Antiquemar", "Antídoto", "Ataque X", "Bicicleta", "Bicicleta", "Bono bici", "Calcio", "Calcio", "Caramelo raro", "Caramelo raro", "Carburante", "Carburante", "Caña buena", "Caña vieja", "Correo Oak", "Correo Oak", "Cuerda huida", "Cura total", "Defensa especial X", "Defensa X", "Despertar", "Dientes oro", "Directo", "Elixir", "Especial X", "Fósil domo", "Fósil domo", "Fósil hélix", "Hierro", "Hierro", "Hiperpoción", "Limonada", "Limonada", "Llave ascensor", "Llave magnética", "Llave secreta", "Mapa", "Mapa", "Monedero", "Monedero", "Más PP", "Más PS", "Más PS", "Máximo elixir", "Pepita", "Piedra agua", "Piedra agua", "Piedra fuego", "Piedra fuego", "Piedra hoja", "Piedra hoja", "Piedra lunar", "Piedra lunar", "Piedra trueno", "Piedra trueno", "Poción", "Poción", "Poción máxima", "Poción máxima", "Poké flauta", "Poké flauta", "Poké muñeco", "Poké muñeco", "Precisión X", "Protección especial", "Proteína", "Proteína", "Refresco", "Refresco", "Repartir experiencia", "Repelente", "Repelente máximo", "Repelente máximo", "Restaurar todo", "Revivir", "Revivir máximo", "Revivir máximo", " ", "S", "Scope Silph", "Scope Silph", "Supercaña", "Supercaña", "Superpoción", "Superpoción", "Superrepelente", "Ticket barco", "Velocidad X", "Zahorí", "Zahorí", "Ámbar viejo", "Ámbar viejo", "Éter", "Éter máximo" }));
        Agregar.add(objeto_combo);
        objeto_combo.setBounds(30, 350, 140, 30);

        genero_label.setFont(new java.awt.Font("Segoe UI", 1, 21)); // NOI18N
        genero_label.setForeground(new java.awt.Color(255, 255, 255));
        genero_label.setText("Género");
        Agregar.add(genero_label);
        genero_label.setBounds(190, 310, 120, 29);

        genero_combo.setBackground(new java.awt.Color(13, 17, 23));
        genero_combo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        genero_combo.setForeground(new java.awt.Color(255, 255, 255));
        genero_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Femenino" }));
        Agregar.add(genero_combo);
        genero_combo.setBounds(190, 350, 120, 30);

        jTabbedPane1.setBackground(new java.awt.Color(22, 26, 33));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));

        estadisticas.setBackground(new java.awt.Color(22, 26, 33));

        base_label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        base_label.setForeground(new java.awt.Color(255, 255, 255));
        base_label.setText("Base");

        ps_label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ps_label.setForeground(new java.awt.Color(255, 255, 255));
        ps_label.setText("PS");

        atq_label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        atq_label.setForeground(new java.awt.Color(255, 255, 255));
        atq_label.setText("Ataque");

        defensa_label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        defensa_label.setForeground(new java.awt.Color(255, 255, 255));
        defensa_label.setText("Defensa");

        atqEspecial_label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        atqEspecial_label.setForeground(new java.awt.Color(255, 255, 255));
        atqEspecial_label.setText("Atq. Especial");

        defEspecial_label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        defEspecial_label.setForeground(new java.awt.Color(255, 255, 255));
        defEspecial_label.setText("Def. Especial");

        velocidad_label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        velocidad_label.setForeground(new java.awt.Color(255, 255, 255));
        velocidad_label.setText("Velocidad");

        total_label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        total_label.setForeground(new java.awt.Color(255, 255, 255));
        total_label.setText("Total");

        totalBase_t.setEditable(false);
        totalBase_t.setBackground(new java.awt.Color(13, 17, 23));
        totalBase_t.setForeground(new java.awt.Color(255, 255, 255));
        totalBase_t.setText("0");

        velocidadBase_t.setEditable(false);
        velocidadBase_t.setBackground(new java.awt.Color(13, 17, 23));
        velocidadBase_t.setForeground(new java.awt.Color(255, 255, 255));
        velocidadBase_t.setText("0");

        defespecialBase_t.setEditable(false);
        defespecialBase_t.setBackground(new java.awt.Color(13, 17, 23));
        defespecialBase_t.setForeground(new java.awt.Color(255, 255, 255));
        defespecialBase_t.setText("0");

        atqespecialBase_t.setEditable(false);
        atqespecialBase_t.setBackground(new java.awt.Color(13, 17, 23));
        atqespecialBase_t.setForeground(new java.awt.Color(255, 255, 255));
        atqespecialBase_t.setText("0");

        defensaBase_t.setEditable(false);
        defensaBase_t.setBackground(new java.awt.Color(13, 17, 23));
        defensaBase_t.setForeground(new java.awt.Color(255, 255, 255));
        defensaBase_t.setText("0");

        ataqueBase_t.setEditable(false);
        ataqueBase_t.setBackground(new java.awt.Color(13, 17, 23));
        ataqueBase_t.setForeground(new java.awt.Color(255, 255, 255));
        ataqueBase_t.setText("0");

        psBase_t.setEditable(false);
        psBase_t.setBackground(new java.awt.Color(13, 17, 23));
        psBase_t.setForeground(new java.awt.Color(255, 255, 255));
        psBase_t.setText("0");

        IV_label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        IV_label.setForeground(new java.awt.Color(255, 255, 255));
        IV_label.setText("IVs");

        psIVS_t.setBackground(new java.awt.Color(13, 17, 23));
        psIVS_t.setForeground(new java.awt.Color(255, 255, 255));
        psIVS_t.setText("0");

        atqIVs_t.setBackground(new java.awt.Color(13, 17, 23));
        atqIVs_t.setForeground(new java.awt.Color(255, 255, 255));
        atqIVs_t.setText("0");

        defIVs_t.setBackground(new java.awt.Color(13, 17, 23));
        defIVs_t.setForeground(new java.awt.Color(255, 255, 255));
        defIVs_t.setText("0");

        atqEspecialIVs_t.setBackground(new java.awt.Color(13, 17, 23));
        atqEspecialIVs_t.setForeground(new java.awt.Color(255, 255, 255));
        atqEspecialIVs_t.setText("0");

        defEspecialIVs_t.setBackground(new java.awt.Color(13, 17, 23));
        defEspecialIVs_t.setForeground(new java.awt.Color(255, 255, 255));
        defEspecialIVs_t.setText("0");

        velocidadIVs_t.setBackground(new java.awt.Color(13, 17, 23));
        velocidadIVs_t.setForeground(new java.awt.Color(255, 255, 255));
        velocidadIVs_t.setText("0");

        totalIVS_t.setEditable(false);
        totalIVS_t.setBackground(new java.awt.Color(13, 17, 23));
        totalIVS_t.setForeground(new java.awt.Color(255, 255, 255));
        totalIVS_t.setText("0");

        totalEVs_t.setEditable(false);
        totalEVs_t.setBackground(new java.awt.Color(13, 17, 23));
        totalEVs_t.setForeground(new java.awt.Color(255, 255, 255));
        totalEVs_t.setText("0");

        velocidadEVs_t.setBackground(new java.awt.Color(13, 17, 23));
        velocidadEVs_t.setForeground(new java.awt.Color(255, 255, 255));
        velocidadEVs_t.setText("0");

        defEspecialEVs_t.setBackground(new java.awt.Color(13, 17, 23));
        defEspecialEVs_t.setForeground(new java.awt.Color(255, 255, 255));
        defEspecialEVs_t.setText("0");

        atqEspecialEVs_t.setBackground(new java.awt.Color(13, 17, 23));
        atqEspecialEVs_t.setForeground(new java.awt.Color(255, 255, 255));
        atqEspecialEVs_t.setText("0");

        defEVs_t.setBackground(new java.awt.Color(13, 17, 23));
        defEVs_t.setForeground(new java.awt.Color(255, 255, 255));
        defEVs_t.setText("0");

        atqEVs_t.setBackground(new java.awt.Color(13, 17, 23));
        atqEVs_t.setForeground(new java.awt.Color(255, 255, 255));
        atqEVs_t.setText("0");

        psEVs_t.setBackground(new java.awt.Color(13, 17, 23));
        psEVs_t.setForeground(new java.awt.Color(255, 255, 255));
        psEVs_t.setText("0");

        EVs_label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        EVs_label.setForeground(new java.awt.Color(255, 255, 255));
        EVs_label.setText("EVs");

        Estadistica_label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Estadistica_label.setForeground(new java.awt.Color(255, 255, 255));
        Estadistica_label.setText("Estadística");

        pstotal_t.setEditable(false);
        pstotal_t.setBackground(new java.awt.Color(13, 17, 23));
        pstotal_t.setForeground(new java.awt.Color(255, 255, 255));
        pstotal_t.setText("0");

        atqtotal_t.setEditable(false);
        atqtotal_t.setBackground(new java.awt.Color(13, 17, 23));
        atqtotal_t.setForeground(new java.awt.Color(255, 255, 255));
        atqtotal_t.setText("0");

        deftotal_t.setEditable(false);
        deftotal_t.setBackground(new java.awt.Color(13, 17, 23));
        deftotal_t.setForeground(new java.awt.Color(255, 255, 255));
        deftotal_t.setText("0");

        atqEspecialtotal_t.setEditable(false);
        atqEspecialtotal_t.setBackground(new java.awt.Color(13, 17, 23));
        atqEspecialtotal_t.setForeground(new java.awt.Color(255, 255, 255));
        atqEspecialtotal_t.setText("0");

        defEspecialtotal_t.setEditable(false);
        defEspecialtotal_t.setBackground(new java.awt.Color(13, 17, 23));
        defEspecialtotal_t.setForeground(new java.awt.Color(255, 255, 255));
        defEspecialtotal_t.setText("0");

        velocidadtotal_t.setEditable(false);
        velocidadtotal_t.setBackground(new java.awt.Color(13, 17, 23));
        velocidadtotal_t.setForeground(new java.awt.Color(255, 255, 255));
        velocidadtotal_t.setText("0");

        javax.swing.GroupLayout estadisticasLayout = new javax.swing.GroupLayout(estadisticas);
        estadisticas.setLayout(estadisticasLayout);
        estadisticasLayout.setHorizontalGroup(
            estadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(estadisticasLayout.createSequentialGroup()
                .addGroup(estadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(estadisticasLayout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(base_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(IV_label, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(EVs_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(Estadistica_label, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(estadisticasLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(estadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(estadisticasLayout.createSequentialGroup()
                                .addComponent(ps_label, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(90, 90, 90)
                                .addComponent(psBase_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(psIVS_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(psEVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(pstotal_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(estadisticasLayout.createSequentialGroup()
                                .addComponent(atq_label, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(ataqueBase_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(atqIVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(atqEVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(atqtotal_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(estadisticasLayout.createSequentialGroup()
                                .addComponent(defensa_label, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(defensaBase_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(defIVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(defEVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(deftotal_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(estadisticasLayout.createSequentialGroup()
                                .addComponent(atqEspecial_label, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(atqespecialBase_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(atqEspecialIVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(atqEspecialEVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(atqEspecialtotal_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(estadisticasLayout.createSequentialGroup()
                                .addComponent(defEspecial_label, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(defespecialBase_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(defEspecialIVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(defEspecialEVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(defEspecialtotal_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(estadisticasLayout.createSequentialGroup()
                                .addComponent(velocidad_label, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(velocidadBase_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(velocidadIVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(velocidadEVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(velocidadtotal_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(estadisticasLayout.createSequentialGroup()
                                .addComponent(total_label)
                                .addGap(80, 80, 80)
                                .addComponent(totalBase_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(totalIVS_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(totalEVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        estadisticasLayout.setVerticalGroup(
            estadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(estadisticasLayout.createSequentialGroup()
                .addGroup(estadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(base_label)
                    .addComponent(IV_label, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EVs_label)
                    .addComponent(Estadistica_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(estadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ps_label)
                    .addComponent(psBase_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(psIVS_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(psEVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pstotal_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(estadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(atq_label, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ataqueBase_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atqIVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atqEVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atqtotal_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(estadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(defensa_label)
                    .addComponent(defensaBase_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(defIVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(defEVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deftotal_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(estadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(atqEspecial_label, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atqespecialBase_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atqEspecialIVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atqEspecialEVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atqEspecialtotal_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(estadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(defEspecial_label)
                    .addComponent(defespecialBase_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(defEspecialIVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(defEspecialEVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(defEspecialtotal_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(estadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(velocidad_label)
                    .addComponent(velocidadBase_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(velocidadIVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(velocidadEVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(velocidadtotal_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(estadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(total_label)
                    .addComponent(totalBase_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalIVS_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalEVs_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Estadisticas", estadisticas);

        movimientos.setBackground(new java.awt.Color(22, 26, 33));

        tabla.setBackground(new java.awt.Color(13, 17, 23));
        tabla.setForeground(new java.awt.Color(255, 255, 255));
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre", "PP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setGridColor(new java.awt.Color(22, 26, 33));
        tabla.setRowHeight(60);
        tabla.setSelectionBackground(new java.awt.Color(13, 17, 23));
        tabla.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tabla.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabla);

        movimientos_label.setBackground(new java.awt.Color(255, 255, 255));
        movimientos_label.setFont(new java.awt.Font("Segoe UI", 1, 21)); // NOI18N
        movimientos_label.setForeground(new java.awt.Color(255, 255, 255));
        movimientos_label.setText("Movimientos");

        movimientos_combo.setBackground(new java.awt.Color(13, 17, 23));
        movimientos_combo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        movimientos_combo.setForeground(new java.awt.Color(255, 255, 255));

        añadirMov.setBackground(new java.awt.Color(30, 112, 235));
        añadirMov.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        añadirMov.setForeground(new java.awt.Color(255, 255, 255));
        añadirMov.setText("Agregar movimiento");
        añadirMov.addActionListener(this);
        /*
        */

        pp_label.setFont(new java.awt.Font("Segoe UI", 1, 21)); // NOI18N
        pp_label.setForeground(new java.awt.Color(255, 255, 255));
        pp_label.setText("PP");

        pp_text.setEditable(false);
        pp_text.setBackground(new java.awt.Color(13, 17, 23));
        pp_text.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        pp_text.setForeground(new java.awt.Color(255, 255, 255));
        pp_text.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pp_text.setText("0");
        pp_text.setBorder(null);
        pp_text.setCaretColor(new java.awt.Color(255, 255, 255));
        pp_text.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        /*
        */

        maspp_label.setFont(new java.awt.Font("Segoe UI", 1, 21)); // NOI18N
        maspp_label.setForeground(new java.awt.Color(255, 255, 255));
        maspp_label.setText("Más PP");

        maspp_text.setEditable(false);
        maspp_text.setBackground(new java.awt.Color(13, 17, 23));
        maspp_text.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        maspp_text.setForeground(new java.awt.Color(255, 255, 255));
        maspp_text.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        maspp_text.setText("0");
        maspp_text.setBorder(null);
        maspp_text.setCaretColor(new java.awt.Color(255, 255, 255));
        maspp_text.setDisabledTextColor(new java.awt.Color(255, 255, 255));

        maspp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/maspp.png"))); // NOI18N
        maspp.setToolTipText("Aumento de puntos");

        eliminarMov.setBackground(new java.awt.Color(184, 44, 0));
        eliminarMov.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        eliminarMov.setForeground(new java.awt.Color(255, 255, 255));
        eliminarMov.setText("Eliminar movimiento");
        eliminarMov.addActionListener(this);
        /*
        eliminarMov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarMovActionPerformed(evt);
            }
        });
        */

        subir.setBackground(new java.awt.Color(13, 17, 23));
        subir.setFont(new java.awt.Font("Segoe UI", 1, 8)); // NOI18N
        subir.setForeground(new java.awt.Color(255, 255, 255));
        subir.setText("↑");
        subir.setMaximumSize(new java.awt.Dimension(30, 27));
        subir.setMinimumSize(new java.awt.Dimension(30, 27));
        subir.setPreferredSize(new java.awt.Dimension(30, 27));
        subir.addActionListener(this);

        bajar.setBackground(new java.awt.Color(13, 17, 23));
        bajar.setFont(new java.awt.Font("Segoe UI", 1, 8)); // NOI18N
        bajar.setForeground(new java.awt.Color(255, 255, 255));
        bajar.setText("↓");
        bajar.setMaximumSize(new java.awt.Dimension(30, 27));
        bajar.setMinimumSize(new java.awt.Dimension(30, 27));
        bajar.setPreferredSize(new java.awt.Dimension(30, 27));
        bajar.addActionListener(this);

        javax.swing.GroupLayout movimientosLayout = new javax.swing.GroupLayout(movimientos);
        movimientos.setLayout(movimientosLayout);
        movimientosLayout.setHorizontalGroup(
            movimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(movimientosLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(movimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(movimientosLayout.createSequentialGroup()
                        .addGroup(movimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(movimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(movimientosLayout.createSequentialGroup()
                                    .addComponent(pp_text, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(movimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(maspp_label)
                                        .addComponent(maspp_text, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(movimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(maspp)
                                        .addComponent(subir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(bajar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(movimientosLayout.createSequentialGroup()
                                    .addComponent(movimientos_label)
                                    .addGap(160, 160, 160))
                                .addComponent(movimientos_combo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pp_label))
                        .addGap(0, 15, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, movimientosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(movimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(añadirMov, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eliminarMov, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        movimientosLayout.setVerticalGroup(
            movimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, movimientosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(movimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(movimientosLayout.createSequentialGroup()
                        .addComponent(movimientos_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(movimientos_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(movimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(movimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(pp_label)
                                .addComponent(maspp_label))
                            .addComponent(maspp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(movimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pp_text, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(maspp_text, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subir, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bajar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addComponent(añadirMov)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eliminarMov)))
                .addGap(49, 49, 49))
        );

        jTabbedPane1.addTab("Movimientos", movimientos);

        Agregar.add(jTabbedPane1);
        jTabbedPane1.setBounds(40, 390, 650, 280);

        id_label.setBackground(new java.awt.Color(255, 255, 255));
        id_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        id_label.setForeground(new java.awt.Color(255, 255, 255));
        id_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        id_label.setText("ID generada: ");
        id_label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Agregar.add(id_label);
        id_label.setBounds(0, 680, 120, 20);

        idT.setEditable(false);
        idT.setBackground(new java.awt.Color(13, 17, 23));
        idT.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        idT.setForeground(new java.awt.Color(255, 255, 255));
        idT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        idT.setBorder(null);
        idT.setCaretColor(new java.awt.Color(255, 255, 255));
        idT.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        idT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTActionPerformed(evt);
            }
        });
        Agregar.add(idT);
        idT.setBounds(120, 670, 130, 30);

        numPokedex_label.setFont(new java.awt.Font("Segoe UI", 1, 21)); // NOI18N
        numPokedex_label.setForeground(new java.awt.Color(255, 255, 255));
        numPokedex_label.setText("Num Pokedex");
        Agregar.add(numPokedex_label);
        numPokedex_label.setBounds(330, 310, 140, 29);

        numPokedex.setEditable(false);
        numPokedex.setBackground(new java.awt.Color(13, 17, 23));
        numPokedex.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        numPokedex.setForeground(new java.awt.Color(255, 255, 255));
        numPokedex.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numPokedex.setBorder(null);
        numPokedex.setCaretColor(new java.awt.Color(255, 255, 255));
        numPokedex.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        Agregar.add(numPokedex);
        numPokedex.setBounds(330, 350, 140, 30);

        agregarPK.setBackground(new java.awt.Color(35, 135, 55));
        agregarPK.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        agregarPK.setForeground(new java.awt.Color(255, 255, 255));
        agregarPK.setText("Agregar");
        agregarPK.addActionListener(this);
        Agregar.add(agregarPK);
        agregarPK.setBounds(540, 670, 170, 30);

        hab_especial_label.setFont(new java.awt.Font("Segoe UI", 1, 21)); // NOI18N
        hab_especial_label.setForeground(new java.awt.Color(255, 255, 255));
        hab_especial_label.setText("Hab. Especial");
        Agregar.add(hab_especial_label);
        hab_especial_label.setBounds(510, 310, 130, 29);

        habilidad_combo.setBackground(new java.awt.Color(13, 17, 23));
        habilidad_combo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        habilidad_combo.setForeground(new java.awt.Color(255, 255, 255));
        habilidad_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Absorbe agua", "Absorbe electricidad", "Absorbe fuego", "Aclimatación", "Agallas", "Armadura batalla", "Cabeza roca", "Cacofonía", "Calco", "Cambio color", "Caparazón", "Chorro arena", "Clorofila", "Corte fuerte", "Cuerpo llama", "Cuerpo puro", "Cura lluvia", "Cura natural", "Despiste", "Dicha", "Efecto espora", "Electricidad estática", "Energía pura", "Enjambre", "Entusiasmo", "Escama especial", "Esclusa de aire", "Escudo magma", "Espesura", "Espíritu vital", "Flexibilidad", "Fuerza mental", "Fuga", "Gran encanto", "Hedor", "Humedad", "Humo blanco", "Iluminación", "Imán", "Impulso", "Inmunidad", "Insomnio", "Insonorizar", "Intimidación", "Levitación", "Llovizna", "Madrugar", "Mar llamas", "Más", "Menos", "Mudar", "Nado rápido", "Ojo compuesto", "Pararrayos", "Pereza", "Piel tosca", "Polvo escudo", "Potencia", "Predicción", "Presión", "Punto tóxico", "Recogida", "Ritmo propio", "Robustez", "Sebo", "Sequía", "Sincronía", "Sombra trampa", "Superguarda", "Torrente", "Trampa arena", "Velo agua", "Velo arena", "Ventosas", "Viscosecreción", "Viscosidad", "Vista lince" }));
        Agregar.add(habilidad_combo);
        habilidad_combo.setBounds(510, 350, 140, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(709, 709, 709))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void eliminarMovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarMovActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eliminarMovActionPerformed

    private void naturalezas_comboActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void moteActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void especies_comboActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void objeto_comboActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void genero_comboActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void idTActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void numPokedexActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void movimientosT1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void añadirMovActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void movimientosT2ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Agregar;
    private javax.swing.JLabel EVs_label;
    private javax.swing.JLabel Estadistica_label;
    private javax.swing.JLabel IV_label;
    private javax.swing.JButton agregarPK;
    private javax.swing.JTextField ataqueBase_t;
    private javax.swing.JTextField atqEVs_t;
    private javax.swing.JTextField atqEspecialEVs_t;
    private javax.swing.JTextField atqEspecialIVs_t;
    private javax.swing.JLabel atqEspecial_label;
    private javax.swing.JTextField atqEspecialtotal_t;
    private javax.swing.JTextField atqIVs_t;
    private javax.swing.JLabel atq_label;
    private javax.swing.JTextField atqespecialBase_t;
    private javax.swing.JTextField atqtotal_t;
    private javax.swing.JButton añadirMov;
    private javax.swing.JButton bajar;
    private javax.swing.JLabel base_label;
    private javax.swing.JTextField defEVs_t;
    private javax.swing.JTextField defEspecialEVs_t;
    private javax.swing.JTextField defEspecialIVs_t;
    private javax.swing.JLabel defEspecial_label;
    private javax.swing.JTextField defEspecialtotal_t;
    private javax.swing.JTextField defIVs_t;
    private javax.swing.JTextField defensaBase_t;
    private javax.swing.JLabel defensa_label;
    private javax.swing.JTextField defespecialBase_t;
    private javax.swing.JTextField deftotal_t;
    private javax.swing.JButton eliminarMov;
    private javax.swing.JLabel especie_Label;
    private javax.swing.JComboBox<String> especies_combo;
    private javax.swing.JPanel estadisticas;
    private javax.swing.JComboBox<String> genero_combo;
    private javax.swing.JLabel genero_label;
    private javax.swing.JLabel hab_especial_label;
    private javax.swing.JComboBox<String> habilidad_combo;
    private javax.swing.JTextField idT;
    private javax.swing.JLabel id_label;
    private javax.swing.JPanel imagen;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel maspp;
    private javax.swing.JLabel maspp_label;
    private javax.swing.JTextField maspp_text;
    private javax.swing.JTextField mote;
    private javax.swing.JLabel mote_label;
    private javax.swing.JPanel movimientos;
    private javax.swing.JComboBox<String> movimientos_combo;
    private javax.swing.JLabel movimientos_label;
    private javax.swing.JLabel naturaleza_label;
    private javax.swing.JComboBox<String> naturalezas_combo;
    private javax.swing.JTextField numPokedex;
    private javax.swing.JLabel numPokedex_label;
    private javax.swing.JComboBox<String> objeto_combo;
    private javax.swing.JLabel objeto_label;
    private javax.swing.JLabel perfil;
    private javax.swing.JLabel pp_label;
    private javax.swing.JTextField pp_text;
    private javax.swing.JTextField psBase_t;
    private javax.swing.JTextField psEVs_t;
    private javax.swing.JTextField psIVS_t;
    private javax.swing.JLabel ps_label;
    private javax.swing.JTextField pstotal_t;
    private javax.swing.JButton subir;
    private javax.swing.JTable tabla;
    private javax.swing.JLabel titulo;
    private javax.swing.JTextField totalBase_t;
    private javax.swing.JTextField totalEVs_t;
    private javax.swing.JTextField totalIVS_t;
    private javax.swing.JLabel total_label;
    private javax.swing.JTextField velocidadBase_t;
    private javax.swing.JTextField velocidadEVs_t;
    private javax.swing.JTextField velocidadIVs_t;
    private javax.swing.JLabel velocidad_label;
    private javax.swing.JTextField velocidadtotal_t;
    // End of variables declaration//GEN-END:variables

    
    public String generarID(){
        Random random = new Random();
        int limiteInferior = 10000;
        int limiteSuperior = 65535;
        int limiteSuperiorAbierto = limiteSuperior + 1;
        int numeroAleatorio = limiteInferior + random.nextInt(limiteSuperiorAbierto - limiteInferior);
 
        return String.valueOf(numeroAleatorio);
    }
    
    @Override
    public void actionPerformed(ActionEvent evt) {
        if (evt.getSource() == añadirMov) {
            String movimiento = movimientos_combo.getItemAt(movimientos_combo.getSelectedIndex());
            String pp = pp_text.getText();
            String masPP = maspp_text.getText();
            int ppfinal = Integer.parseInt(pp) + Integer.parseInt(masPP);
            for (int i = 0; i < 4; i++) {
                Object celda = dtm.getValueAt(i, 0);
                if (celda == null || celda.toString().isEmpty()) {
                    dtm.setValueAt(movimiento, i, 0);
                    dtm.setValueAt(ppfinal, i, 1);
                    System.out.println("Añadido");
                    break;
                }
            }
        }
        if(evt.getSource() == eliminarMov){
            int fila = tabla.getSelectedRow();
            dtm.removeRow(fila);
            dtm.addRow(new Object[]{null, null});
        }
        if(evt.getSource() == subir){
            if(Integer.parseInt(maspp_text.getText()) >= 0 && Integer.parseInt(maspp_text.getText()) < 3 ){
                maspp_text.setText(Integer.toString(Integer.parseInt(maspp_text.getText()) + 1));
                return;
            }
            ((AgregarNuevo)javax.swing.SwingUtilities.getWindowAncestor(this)).Error("No puedes subir el PP a más de 3");
        }
        if (evt.getSource() == bajar){
            if(Integer.parseInt(maspp_text.getText()) != 0 && Integer.parseInt(maspp_text.getText()) <= 3 ){
                maspp_text.setText(Integer.toString(Integer.parseInt(maspp_text.getText()) - 1));
                return;
            }
            ((AgregarNuevo)javax.swing.SwingUtilities.getWindowAncestor(this)).Error("No puedes subir el PP a menos de 0");
        }
        if(evt.getSource() == agregarPK) {
            if (guardarPokemon()) {
                ((AgregarNuevo) javax.swing.SwingUtilities.getWindowAncestor(this)).Error("Se ha agregado el pokemon correctamente");
                guardarMovimientos();
            } else {
                ((AgregarNuevo) javax.swing.SwingUtilities.getWindowAncestor(this)).Error("No se ha podido agregar el pokemon");
            }
        }
    }


    public boolean guardarPokemon(){
        if(tabla.getValueAt(0, 0) == null){
            return false;
        }
        ArrayList datos = new ArrayList();
        int idPokemon = Integer.parseInt(idT.getText());
        String mote_t = mote.getText();
        String genero = (String) genero_combo.getSelectedItem();
        String HabEspecial = (String) habilidad_combo.getSelectedItem();
        int numPokedex_t = Integer.parseInt(numPokedex.getText());
        float ps = Float.parseFloat(pstotal_t.getText());
        float atk = Float.parseFloat(atqtotal_t.getText());
        float def = Float.parseFloat(deftotal_t.getText());
        float vel = Float.parseFloat(velocidadtotal_t.getText());
        float sdef = Float.parseFloat(defEspecialtotal_t.getText());
        float satk = Float.parseFloat(atqEspecialtotal_t.getText());
        String objeto = (String) objeto_combo.getSelectedItem();
        String naturaleza = (String) naturalezas_combo.getSelectedItem();
        System.out.println("Nof fue ningun objeto ni naturaleza");
        int ivps = Integer.parseInt(psIVS_t.getText());
        int ivatk = Integer.parseInt(atqIVs_t.getText());
        int ivdef = Integer.parseInt(defIVs_t.getText());
        int ivvel = Integer.parseInt(velocidadIVs_t.getText());
        int ivsatk = Integer.parseInt(atqEspecialIVs_t.getText());
        int ivsdef = Integer.parseInt(defEspecialIVs_t.getText());
        int evps = Integer.parseInt(psEVs_t.getText());
        int evatk = Integer.parseInt(atqEVs_t.getText());
        int evdef = Integer.parseInt(defEVs_t.getText());
        int evvel = Integer.parseInt(velocidadEVs_t.getText());
        int evsatk = Integer.parseInt(atqEspecialEVs_t.getText());
        int evsdef = Integer.parseInt(defEspecialEVs_t.getText());
        System.out.println("No fue ninguna estadistica");
        datos.add(idPokemon);
        System.out.println(idEntrenador);
        datos.add(Integer.parseInt(idEntrenador));
        datos.add(mote_t);
        datos.add(genero);
        datos.add(HabEspecial);
        datos.add(numPokedex_t);
        datos.add(ps);
        datos.add(atk);
        datos.add(def);
        datos.add(vel);
        datos.add(sdef);
        datos.add(satk);
        datos.add(objeto);
        datos.add(naturaleza);
        datos.add(ivps);
        datos.add(ivatk);
        datos.add(ivdef);
        datos.add(ivvel);
        datos.add(ivsdef);
        datos.add(ivsatk);
        datos.add(evps);
        datos.add(evatk);
        datos.add(evdef);
        datos.add(evvel);
        datos.add(evsdef);
        datos.add(evsatk);
        mBD.agregarPokemon(datos);
        return true;
    }

    public void guardarMovimientos(){
        for(int i = 0; i < 4; i++){
            if(tabla.getValueAt(i, 0) != null){
                ArrayList informacion = new ArrayList();
                informacion.add(tabla.getValueAt(i, 0)); //nombre del movimiento la llave foranea
                informacion.add(Integer.parseInt(idT.getText()));     //id del pokemon
                informacion.add(Integer.parseInt(maspp_text.getText()));  //el pp agregado?
                mBD.agregarMovimientos(informacion);
            }
        }
    }

    public void llenarEspecies(){
        String especies[] = new String [lista.size()];
        for(int i = 0; i < lista.size(); i ++){
            especies[i] = lista.get(i).toString();
        }
        especies_combo.removeAllItems();
        especies_combo.setModel(new javax.swing.DefaultComboBoxModel<>(especies));
    }

    public void sumar() {
        int psBase = Integer.parseInt(psBase_t.getText());
        int ataqueBase = Integer.parseInt(ataqueBase_t.getText());
        int defensaBase = Integer.parseInt(defensaBase_t.getText());
        int atqespecialBase = Integer.parseInt(atqespecialBase_t.getText());
        int defespecialBase = Integer.parseInt(defespecialBase_t.getText());
        int velocidadBase = Integer.parseInt(velocidadBase_t.getText());
        int sumatoria = psBase + ataqueBase + defensaBase + atqespecialBase + defespecialBase + velocidadBase;
        totalBase_t.setText(Integer.toString(sumatoria));
    }

    public void llenarDatosEspecie(){
        int filaSeleccionada = especies_combo.getSelectedIndex();

        ArrayList datos = mBD.obtenerDatosEspecie(especies_combo.getItemAt(filaSeleccionada));
        numPokedex.setText(datos.get(0).toString());
        psBase_t.setText(datos.get(1).toString());
        ataqueBase_t.setText(datos.get(2).toString());
        defensaBase_t.setText(datos.get(3).toString());
        atqespecialBase_t.setText(datos.get(4).toString());
        defespecialBase_t.setText(datos.get(5).toString());
        velocidadBase_t.setText(datos.get(6).toString());
        sumar();
        cargarImagen(datos);
    }

    public void cargarImagen(ArrayList dato ){
        byte[] datos = (byte[]) dato.get(7);
        Image foto = new ImageIcon(datos).getImage();
        ImageIcon icono = new ImageIcon(foto.getScaledInstance(210,210,Image.SCALE_SMOOTH));
        perfil.setIcon(icono);
    }

    public void agregarListenerSeleccionEspecie(){
        especies_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {

                int filaSeleccionada = especies_combo.getSelectedIndex();

                if (filaSeleccionada != -1) {
                    llenarDatosEspecie();
                    sumar();
                    calcularEstadisticas();
                }
            }
        });
    }

    public void llenarMovimientos(){
        ArrayList movimientosLista = mBD.obtenerMovimientos();
        String movimientos[] = new String [movimientosLista.size()];
        for(int i = 0; i < movimientosLista.size(); i ++){
            movimientos[i] = movimientosLista.get(i).toString();
        }
        movimientos_combo.removeAllItems();
        movimientos_combo.setModel(new javax.swing.DefaultComboBoxModel<>(movimientos));
    }

    public void agregarListenerSeleccionMovimientos(){
        movimientos_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {

                int filaSeleccionada = movimientos_combo.getSelectedIndex();

                if (filaSeleccionada != -1) {
                    pp_text.setText(mBD.obtenerPP(movimientos_combo.getItemAt(filaSeleccionada)));
                }
            }
        });
    }

    public void agregarListenerSeleccionNaturaleza(){
        naturalezas_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {

                int filaSeleccionada = naturalezas_combo.getSelectedIndex();

                if (filaSeleccionada != -1) {
                    calcularEstadisticas();
                }
            }
        });
    }


    private void agregarListenerEstadisticas() {
        psIVS_t.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
            public void removeUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
            public void insertUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
        });

        atqIVs_t.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
            public void removeUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
            public void insertUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
        });

        defIVs_t.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
            public void removeUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
            public void insertUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
        });

        atqEspecialIVs_t.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
            public void removeUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
            public void insertUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
        });

        defEspecialIVs_t.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
            public void removeUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
            public void insertUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
        });

        velocidadIVs_t.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
            public void removeUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
            public void insertUpdate(DocumentEvent e) {
                validarIVS();
                calcularEstadisticas();
            }
        });
        //EVs
        psEVs_t.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
            public void removeUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
            public void insertUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
        });

        atqEVs_t.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
            public void removeUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
            public void insertUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
        });

        defEVs_t.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
            public void removeUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
            public void insertUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
        });

        atqEspecialEVs_t.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
            public void removeUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
            public void insertUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
        });

        defEspecialEVs_t.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
            public void removeUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
            public void insertUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
        });

        velocidadEVs_t.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
            public void removeUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
            public void insertUpdate(DocumentEvent e) {
                validarEVS();
                calcularEstadisticas();
            }
        });
    }

    public void validarIVS(){
        try {
            int psIVs = Integer.parseInt(psIVS_t.getText());
            if(psIVs < 0 || psIVs > 31){
                totalIVS_t.setText("Error");
                return;
            }
            int atqIVs = Integer.parseInt(atqIVs_t.getText());
            if(atqIVs < 0 || atqIVs > 31){
                totalIVS_t.setText("Error");
                return;
            }
            int defIVs = Integer.parseInt(defIVs_t.getText());
            if(defIVs < 0 || defIVs > 31){
                totalIVS_t.setText("Error");
                return;
            }
            int atqEspecialIVs = Integer.parseInt(atqEspecialIVs_t.getText());
            if(atqEspecialIVs < 0 || atqEspecialIVs > 31){
                totalIVS_t.setText("Error");
                return;
            }
            int defEspecialIVs = Integer.parseInt(defEspecialIVs_t.getText());
            if(defEspecialIVs < 0 || defEspecialIVs > 31){
                totalIVS_t.setText("Error");
                return;
            }
            int velocidadIVs = Integer.parseInt(velocidadIVs_t.getText());
            if(velocidadIVs < 0 || velocidadIVs > 31){
                totalIVS_t.setText("Error");
                return;
            }
            int sumatoria = psIVs + atqIVs + defIVs + atqEspecialIVs + defEspecialIVs + velocidadIVs;
            if (sumatoria > 186) {
                totalIVS_t.setText("Error");
            } else {
                totalIVS_t.setText(Integer.toString(sumatoria));
            }
        } catch (NumberFormatException e) {
            totalIVS_t.setText("Error");
        }
    }

    public void validarEVS(){
        try {
            int psEVs = Integer.parseInt(psEVs_t.getText());
            if(psEVs < 0 || psEVs > 255){
                totalEVs_t.setText("Error");
                return;
            }
            int atqEVs = Integer.parseInt(atqEVs_t.getText());
            if(atqEVs < 0 || atqEVs > 255){
                totalEVs_t.setText("Error");
                return;
            }
            int defEVs = Integer.parseInt(defEVs_t.getText());
            if(defEVs < 0 || defEVs > 255){
                totalEVs_t.setText("Error");
                return;
            }
            int atqEspecialEVs = Integer.parseInt(atqEspecialEVs_t.getText());
            if(atqEspecialEVs < 0 || atqEspecialEVs > 255){
                totalEVs_t.setText("Error");
                return;
            }
            int defEspecialEVs = Integer.parseInt(defEspecialEVs_t.getText());
            if(defEspecialEVs < 0 || defEspecialEVs > 255){
                totalEVs_t.setText("Error");
                return;
            }
            int velocidadEVs = Integer.parseInt(velocidadEVs_t.getText());
            if(velocidadEVs < 0 || velocidadEVs > 255){
                totalEVs_t.setText("Error");
                return;
            }
            int sumatoria = psEVs + atqEVs + defEVs + atqEspecialEVs + defEspecialEVs + velocidadEVs;
            if (sumatoria > 510) {
                totalEVs_t.setText("Error");
            } else {
                totalEVs_t.setText(Integer.toString(sumatoria));
            }
        } catch (NumberFormatException e) {
            totalEVs_t.setText("Error");
        }
    }

    public void calcularEstadisticas(){
        try{
            int psBase = Integer.parseInt(psBase_t.getText());
            int ataqueBase = Integer.parseInt(ataqueBase_t.getText());
            int defensaBase = Integer.parseInt(defensaBase_t.getText());
            int atqespecialBase = Integer.parseInt(atqespecialBase_t.getText());
            int defespecialBase = Integer.parseInt(defespecialBase_t.getText());
            int velocidadBase = Integer.parseInt(velocidadBase_t.getText());
            int psIVs = Integer.parseInt(psIVS_t.getText());
            int atqIVs = Integer.parseInt(atqIVs_t.getText());
            int defIVs = Integer.parseInt(defIVs_t.getText());
            int atqEspecialIVs = Integer.parseInt(atqEspecialIVs_t.getText());
            int defEspecialIVs = Integer.parseInt(defEspecialIVs_t.getText());
            int velocidadIVs = Integer.parseInt(velocidadIVs_t.getText());
            int psEVs = Integer.parseInt(psEVs_t.getText());
            int atqEVs = Integer.parseInt(atqEVs_t.getText());
            int defEVs = Integer.parseInt(defEVs_t.getText());
            int atqEspecialEVs = Integer.parseInt(atqEspecialEVs_t.getText());
            int defEspecialEVs = Integer.parseInt(defEspecialEVs_t.getText());
            int velocidadEVs = Integer.parseInt(velocidadEVs_t.getText());
            float ps = 10 + (50.0f / 100 * (2 * psBase + psIVs + psEVs)) + 50;
            int ataque = (5 + ( 50 / 100 * (ataqueBase * 2) + atqIVs + atqEVs));
            int defensa = (5 + ( 50 / 100 * (defensaBase * 2) + defIVs + defEVs));
            int atqespecial = (5 + ( 50 / 100 * (atqespecialBase * 2) + atqEspecialIVs+ atqEspecialEVs));
            int defespecial = (5 + ( 50 / 100 * (defespecialBase* 2) + defEspecialIVs + defEspecialEVs));
            int velocidad = (5 + ( 50 / 100 * (velocidadBase * 2) + velocidadIVs + velocidadEVs));
            multiplicadorNaturaleza(ps,ataque,defensa,atqespecial,defespecial,velocidad);
        }catch (NumberFormatException e) {
            pstotal_t.setText("Error");
            atqtotal_t.setText("Error");
            deftotal_t.setText("Error");
            atqEspecialtotal_t.setText("Error");
            defEspecialtotal_t.setText("Error");
            velocidadtotal_t.setText("Error");
        }
    }

    public void multiplicadorNaturaleza(float ps, int ataque, int defensa, int atqespecial, int defespecial, int velocidad){
        float Nataque;
        float Ndefensa;
        float Natqespecial;
        float Ndefespecial;
        float Nvelocidad;
        /*


        Serena

            0.9 desfavorable 1 neutral 1.1 favorable
                */
        int filaSeleccionada = naturalezas_combo.getSelectedIndex();
        String naturaleza = naturalezas_combo.getItemAt(filaSeleccionada);
        switch (naturaleza) {
            case "Activa":
                Nvelocidad = (float) (velocidad * 1.1);
                Ndefensa = (float) (defensa * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(ataque));
                deftotal_t.setText(Float.toString(Ndefensa));
                atqEspecialtotal_t.setText(Float.toString(atqespecial));
                defEspecialtotal_t.setText(Float.toString(defespecial));
                velocidadtotal_t.setText(Float.toString(Nvelocidad));
                break;
            case "Afable":
                Natqespecial = (float) (atqespecial * 1.1);
                Ndefensa = (float) (defensa * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(ataque));
                deftotal_t.setText(Float.toString(Ndefensa));
                atqEspecialtotal_t.setText(Float.toString(Natqespecial));
                defEspecialtotal_t.setText(Float.toString(defespecial));
                velocidadtotal_t.setText(Float.toString(velocidad));
                break;
            case"Agitada":
                Ndefensa = (float) (defensa * 1.1);
                Natqespecial = (float) (atqespecial * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(ataque));
                deftotal_t.setText(Float.toString(Ndefensa));
                atqEspecialtotal_t.setText(Float.toString(Natqespecial));
                defEspecialtotal_t.setText(Float.toString(defespecial));
                velocidadtotal_t.setText(Float.toString(velocidad));
                break;
            case "Alegre":
                Nvelocidad = (float) (velocidad * 1.1);
                Natqespecial = (float) (atqespecial * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(ataque));
                deftotal_t.setText(Float.toString(defensa));
                atqEspecialtotal_t.setText(Float.toString(Natqespecial));
                defEspecialtotal_t.setText(Float.toString(defespecial));
                velocidadtotal_t.setText(Float.toString(Nvelocidad));
                break;
            case "Alocada":
                Natqespecial = (float) (atqespecial * 1.1);
                Ndefespecial = (float) (defespecial * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(ataque));
                deftotal_t.setText(Float.toString(defensa));
                atqEspecialtotal_t.setText(Float.toString(Natqespecial));
                defEspecialtotal_t.setText(Float.toString(Ndefespecial));
                velocidadtotal_t.setText(Float.toString(velocidad));
                break;
            case "Amable":
                Ndefespecial = (float) (defespecial * 1.1);
                Ndefensa = (float) (defensa * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(ataque));
                deftotal_t.setText(Float.toString(Ndefensa));
                atqEspecialtotal_t.setText(Float.toString(atqespecial));
                defEspecialtotal_t.setText(Float.toString(Ndefespecial));
                velocidadtotal_t.setText(Float.toString(velocidad));
                break;
            case "Audaz":
                Nataque = (float) (ataque * 1.1);
                Nvelocidad = (float) (velocidad * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(Nataque));
                deftotal_t.setText(Float.toString(defensa));
                atqEspecialtotal_t.setText(Float.toString(atqespecial));
                defEspecialtotal_t.setText(Float.toString(defespecial));
                velocidadtotal_t.setText(Float.toString(Nvelocidad));
                break;
            case "Cauta":
                Ndefespecial = (float) (defespecial * 1.1);
                Natqespecial = (float) (atqespecial * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(ataque));
                deftotal_t.setText(Float.toString(defensa));
                atqEspecialtotal_t.setText(Float.toString(Natqespecial));
                defEspecialtotal_t.setText(Float.toString(Ndefespecial));
                velocidadtotal_t.setText(Float.toString(velocidad));
                break;
            case "Fuerte", "Dócil", "Tímida", "Rara", "Seria":
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(ataque));
                deftotal_t.setText(Float.toString(defensa));
                atqEspecialtotal_t.setText(Float.toString(atqespecial));
                defEspecialtotal_t.setText(Float.toString(defespecial));
                velocidadtotal_t.setText(Float.toString(velocidad));
                break;
            case "Firme":
                Nataque = (float) (ataque * 1.1);
                Natqespecial = (float) (atqespecial * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(Nataque));
                deftotal_t.setText(Float.toString(defensa));
                atqEspecialtotal_t.setText(Float.toString(Natqespecial));
                defEspecialtotal_t.setText(Float.toString(defespecial));
                velocidadtotal_t.setText(Float.toString(velocidad));
                break;
            case "Floja":
                Ndefensa = (float) (defensa * 1.1);
                Ndefespecial = (float) (defespecial * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(ataque));
                deftotal_t.setText(Float.toString(Ndefensa));
                atqEspecialtotal_t.setText(Integer.toString(atqespecial));
                defEspecialtotal_t.setText(Float.toString(Ndefespecial));
                velocidadtotal_t.setText(Integer.toString(velocidad));
                break;
            case "Grosera":
                Ndefespecial = (float) (defespecial * 1.1);
                Nvelocidad = (float) (velocidad * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(ataque));
                deftotal_t.setText(Float.toString(defensa));
                atqEspecialtotal_t.setText(Float.toString(atqespecial));
                defEspecialtotal_t.setText(Float.toString(Ndefespecial));
                velocidadtotal_t.setText(Float.toString(Nvelocidad));
                break;
            case "Huraña":
                Nataque = (float) (ataque * 1.1);
                Ndefensa = (float) (defensa * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(Nataque));
                deftotal_t.setText(Float.toString(Ndefensa));
                atqEspecialtotal_t.setText(Float.toString(atqespecial));
                defEspecialtotal_t.setText(Float.toString(defespecial));
                velocidadtotal_t.setText(Float.toString(velocidad));
                break;
            case "Ingenua":
                Nvelocidad = (float) (velocidad * 1.1);
                Ndefespecial = (float) (defespecial * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(ataque));
                deftotal_t.setText(Float.toString(defensa));
                atqEspecialtotal_t.setText(Float.toString(atqespecial));
                defEspecialtotal_t.setText(Float.toString(Ndefespecial));
                velocidadtotal_t.setText(Float.toString(Nvelocidad));
                break;
            case "Mansa":
                Natqespecial = (float) (atqespecial * 1.1);
                Nvelocidad = (float) (velocidad * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(ataque));
                deftotal_t.setText(Float.toString(defensa));
                atqEspecialtotal_t.setText(Float.toString(Natqespecial));
                defEspecialtotal_t.setText(Float.toString(defensa));
                velocidadtotal_t.setText(Float.toString(Nvelocidad));
                break;
            case "Miedosa":
                Nvelocidad = (float) (velocidad * 1.1);
                Nataque = (float) (ataque * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(Nataque));
                deftotal_t.setText(Float.toString(defensa));
                atqEspecialtotal_t.setText(Float.toString(atqespecial));
                defEspecialtotal_t.setText(Float.toString(defespecial));
                velocidadtotal_t.setText(Float.toString(Nvelocidad));
                break;
            case "Modesta":
                Natqespecial = (float) (atqespecial * 1.1);
                Nataque = (float) (ataque * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(Nataque));
                deftotal_t.setText(Float.toString(defensa));
                atqEspecialtotal_t.setText(Float.toString(Natqespecial));
                defEspecialtotal_t.setText(Float.toString(defespecial));
                velocidadtotal_t.setText(Float.toString(velocidad));
                break;
            case "Osada":
                Ndefensa = (float) (defensa * 1.1);
                Nataque = (float) (ataque * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(Nataque));
                deftotal_t.setText(Float.toString(Ndefensa));
                atqEspecialtotal_t.setText(Float.toString(atqespecial));
                defEspecialtotal_t.setText(Float.toString(defespecial));
                velocidadtotal_t.setText(Float.toString(velocidad));
                break;
            case "Pícara":
                Nataque = (float) (ataque * 1.1);
                Ndefespecial = (float) (defespecial * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(Nataque));
                deftotal_t.setText(Float.toString(defensa));
                atqEspecialtotal_t.setText(Float.toString(atqespecial));
                defEspecialtotal_t.setText(Float.toString(Ndefespecial));
                velocidadtotal_t.setText(Float.toString(velocidad));
                break;
            case "Plácida":
                Ndefensa = (float) (defensa * 1.1);
                Nvelocidad = (float) (velocidad * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(ataque));
                deftotal_t.setText(Float.toString(Ndefensa));
                atqEspecialtotal_t.setText(Float.toString(atqespecial));
                defEspecialtotal_t.setText(Float.toString(defespecial));
                velocidadtotal_t.setText(Float.toString(Nvelocidad));
                break;
            case "Serena":
                Ndefespecial = (float) (defespecial * 1.1);
                Nataque = (float) (ataque * 0.9);
                pstotal_t.setText(Float.toString(ps));
                atqtotal_t.setText(Float.toString(Nataque));
                deftotal_t.setText(Float.toString(defensa));
                atqEspecialtotal_t.setText(Float.toString(atqespecial));
                defEspecialtotal_t.setText(Float.toString(Ndefespecial));
                velocidadtotal_t.setText(Float.toString(velocidad));
                break;
        }
    }
}

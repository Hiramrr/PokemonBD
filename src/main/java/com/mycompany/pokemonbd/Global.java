/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.pokemonbd;

import org.w3c.dom.html.HTMLIsIndexElement;

import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Random;

/**
 *
 * @author hiram
 */
public class Global extends javax.swing.JFrame implements ActionListener{
    private static String idEntrenador;
    private String idEntrenadorSeleccionado;
    BD mBD = new BD();
    String[] titulo = new String[]{"Foto de perfil","Nombre Entrenador","Pokemon favorito"};
    DefaultTableModel dtm = new DefaultTableModel(titulo, 21) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    /**
     * Creates new form Global
     */
    public Global() {
        initComponents();
        setIconImage(new ImageIcon("Icono.png").getImage());
        this.setTitle("Otros usuarios");
    }

    public Global(String idEntrenador) {
        this.idEntrenador = idEntrenador;
        initComponents();
        setIconImage(new ImageIcon("Icono.png").getImage());
        this.setTitle("Otros usuarios");
        dtm = (DefaultTableModel) tabla_usuarios.getModel();
        tabla_usuarios.setModel(dtm);
        llenarTabla();
        agregarListenerSeleccionTabla();
        primerEntrenador();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        regresar = new javax.swing.JButton();
        titutlo = new javax.swing.JLabel();
        usuario_panel = new javax.swing.JPanel();
        imagen = new javax.swing.JPanel();
        perfil = new javax.swing.JLabel();
        nombre_label = new javax.swing.JLabel();
        ganadas_label = new javax.swing.JLabel();
        perdidas_label = new javax.swing.JLabel();
        imagen1 = new javax.swing.JPanel();
        perfil1 = new javax.swing.JLabel();
        pokemon_favorito = new javax.swing.JLabel();
        desafiar = new javax.swing.JButton();
        num_pokedex = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_usuarios = new javax.swing.JTable();
        usuariosTotales = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(13, 17, 23));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(1280, 764));
        jPanel1.setLayout(null);

        regresar.setBackground(new java.awt.Color(13, 17, 23));
        regresar.setForeground(new java.awt.Color(13, 17, 23));
        regresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/regresar.png"))); // NOI18N
        regresar.setBorder(null);
        regresar.addActionListener(this);
        regresar.setToolTipText("Regresar a la caja de Pokemons");
        regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarActionPerformed(evt);
            }
        });
        jPanel1.add(regresar);
        regresar.setBounds(1200, 20, 50, 50);

        titutlo.setBackground(new java.awt.Color(255, 255, 255));
        titutlo.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        titutlo.setForeground(new java.awt.Color(255, 255, 255));
        titutlo.setText("Otros usuarios");
        jPanel1.add(titutlo);
        titutlo.setBounds(520, 10, 325, 64);

        usuario_panel.setBackground(new java.awt.Color(22, 26, 33));
        usuario_panel.setForeground(new java.awt.Color(22, 26, 33));

        imagen.setBackground(new java.awt.Color(13, 17, 23));
        imagen.setForeground(new java.awt.Color(13, 17, 23));
        imagen.setLayout(null);
        imagen.add(perfil);
        perfil.setBounds(0, 0, 250, 250);

        nombre_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        nombre_label.setForeground(new java.awt.Color(255, 255, 255));
        nombre_label.setText("Nombre: ");

        ganadas_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ganadas_label.setForeground(new java.awt.Color(255, 255, 255));
        ganadas_label.setText("Peleas ganadas:");

        perdidas_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        perdidas_label.setForeground(new java.awt.Color(255, 255, 255));
        perdidas_label.setText("Peleas perdidas:");

        imagen1.setBackground(new java.awt.Color(13, 17, 23));
        imagen1.setForeground(new java.awt.Color(13, 17, 23));
        imagen1.setLayout(null);
        imagen1.add(perfil1);
        perfil1.setBounds(0, 0, 190, 190);

        pokemon_favorito.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        pokemon_favorito.setForeground(new java.awt.Color(255, 255, 255));
        pokemon_favorito.setText("Pokemon favorito:");

        desafiar.setBackground(new java.awt.Color(30, 112, 235));
        desafiar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        desafiar.setForeground(new java.awt.Color(255, 255, 255));
        desafiar.setText("Desafiar");
        desafiar.addActionListener(this);

        num_pokedex.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        num_pokedex.setForeground(new java.awt.Color(255, 255, 255));
        num_pokedex.setText("Num Pokedex:");

        javax.swing.GroupLayout usuario_panelLayout = new javax.swing.GroupLayout(usuario_panel);
        usuario_panel.setLayout(usuario_panelLayout);
        usuario_panelLayout.setHorizontalGroup(
            usuario_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usuario_panelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(usuario_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(usuario_panelLayout.createSequentialGroup()
                        .addComponent(num_pokedex)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(usuario_panelLayout.createSequentialGroup()
                        .addComponent(imagen1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(desafiar, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))
                    .addGroup(usuario_panelLayout.createSequentialGroup()
                        .addGroup(usuario_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(perdidas_label)
                            .addComponent(ganadas_label)
                            .addComponent(nombre_label)
                            .addComponent(imagen, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pokemon_favorito))
                        .addContainerGap(218, Short.MAX_VALUE))))
        );
        usuario_panelLayout.setVerticalGroup(
            usuario_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usuario_panelLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(imagen, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(nombre_label)
                .addGap(18, 18, 18)
                .addComponent(ganadas_label)
                .addGap(18, 18, 18)
                .addComponent(perdidas_label)
                .addGap(18, 18, 18)
                .addComponent(pokemon_favorito)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(num_pokedex)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagen1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usuario_panelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(desafiar)
                .addContainerGap())
        );

        jPanel1.add(usuario_panel);
        usuario_panel.setBounds(0, 0, 502, 760);

        tabla_usuarios.setBackground(new java.awt.Color(13, 17, 23));
        tabla_usuarios.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        tabla_usuarios.setForeground(new java.awt.Color(255, 255, 255));
        tabla_usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Foto de perfil", "Nombre Entrenador", "Pokémon favorito"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_usuarios.setGridColor(new java.awt.Color(22, 26, 33));
        tabla_usuarios.setRowHeight(50);
        tabla_usuarios.setSelectionBackground(new java.awt.Color(13, 17, 23));
        tabla_usuarios.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(tabla_usuarios);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(540, 80, 700, 640);

        usuariosTotales.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        usuariosTotales.setForeground(new java.awt.Color(255, 255, 255));
        usuariosTotales.setText("Entrenadores registrados:");
        jPanel1.add(usuariosTotales);
        usuariosTotales.setBounds(540, 730, 170, 16);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regresarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Global.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Global.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Global.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Global.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Global().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton desafiar;
    private javax.swing.JLabel ganadas_label;
    private javax.swing.JPanel imagen;
    private javax.swing.JPanel imagen1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nombre_label;
    private javax.swing.JLabel num_pokedex;
    private javax.swing.JLabel perdidas_label;
    private javax.swing.JLabel perfil;
    private javax.swing.JLabel perfil1;
    private javax.swing.JLabel pokemon_favorito;
    private javax.swing.JButton regresar;
    private javax.swing.JTable tabla_usuarios;
    private javax.swing.JLabel titutlo;
    private javax.swing.JPanel usuario_panel;
    private javax.swing.JLabel usuariosTotales;
    // End of variables declaration//GEN-END:variables

    public int desafio(){
        Random random = new Random();
        int limiteInferior = 0;
        int limiteSuperior = 10;
        int limiteSuperiorAbierto = limiteSuperior + 1;
        int numeroAleatorio = limiteInferior + random.nextInt(limiteSuperiorAbierto - limiteInferior);
        return numeroAleatorio;
    }

    public void ganar(){
        Dialogo dialogo = new Dialogo(this,true);
        dialogo.setMensaje("¡Felicidades! !Has ganado la batalla!");
        dialogo.setLocation(450, 261);
        dialogo.setTitle("¡Felicidades!");
        dialogo.setVisible(true);
        mBD.actualizarGanadas(idEntrenador);
        mBD.actualizarPerdidas(idEntrenadorSeleccionado);
    }

    public void perder(){
        Dialogo dialogo = new Dialogo(this,true);
        dialogo.setMensaje("¡Que mala suerte! Has perdido la batalla");
        dialogo.setLocation(450, 261);
        dialogo.setTitle("¡Que mala suerte!");
        dialogo.setVisible(true);
        mBD.actualizarPerdidas(idEntrenador);
        mBD.actualizarGanadas(idEntrenadorSeleccionado);
    }

    public void llenarTabla() {
        tabla_usuarios.setDefaultRenderer(Object.class, new RenderImagen());
        ArrayList datos = mBD.obtenerTabla(idEntrenador);

        if (datos != null) {
            for (int i = 0; i < datos.size() && i < 21; i += 5) {
                ImagenAlmacenEntrenador fotoP = new ImagenAlmacenEntrenador();
                System.out.println(datos.get(i));
                fotoP.setImagen((byte[]) datos.get(i));
                Object[] informacion = new Object[3];

                try {
                    byte[] perfilFoto = fotoP.getImagen();
                    BufferedImage bufferedImage = ImageIO.read(new ByteArrayInputStream(perfilFoto));
                    ImageIcon mFoto = new ImageIcon(bufferedImage.getScaledInstance(50, 50, bufferedImage.SCALE_SMOOTH));
                    informacion[0] = new JLabel(mFoto); // Foto de perfil
                } catch (Exception e) {
                    System.out.println(e);
                }
                informacion[1] = datos.get(i + 1); // Nombre del entrenador
                String nombrePokemon = datos.get(i + 2).toString();
                String Mote = datos.get(i + 3).toString();
                String NombreF;
                if(Mote.equals("")) {
                    NombreF = nombrePokemon;
                }
                else{
                    NombreF = Mote;
                }
                informacion[1] = datos.get(2);
                informacion[2] = NombreF;
                if(i / 4 < tabla_usuarios.getRowCount()) {
                    dtm.setValueAt(informacion[0], i / 4, 0);
                    dtm.setValueAt(informacion[1], i / 4, 1);
                    dtm.setValueAt(informacion[2], i / 4, 2);
                } else{
                    ((DefaultTableModel) tabla_usuarios.getModel()).addRow(informacion);
                    dtm.setValueAt(informacion[0], i / 4, 0);
                    dtm.setValueAt(informacion[1], i / 4, 1);
                    dtm.setValueAt(informacion[2], i / 4, 2);
                }
            }
        }
    }

    @Override
    public void actionPerformed(ActionEvent evt) {
        if(evt.getSource() == regresar){
            ListaPK lista = new ListaPK(idEntrenador);
            lista.setVisible(true);

            this.dispose();
        }if(evt.getSource() == desafiar){
            int usuario1 = desafio();
            int usuario2 = desafio();
            Peleandogif pelea = new Peleandogif(this,true);
            pelea.setVisible(true);

            if(usuario1 > usuario2) {
                ganar();
                mostrarDatos(idEntrenadorSeleccionado);
                return;
            }
            perder();
            mostrarDatos(idEntrenadorSeleccionado);
        }
    }

    private void agregarListenerSeleccionTabla() {
        tabla_usuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {

                int filaSeleccionada = tabla_usuarios.getSelectedRow();

                if (filaSeleccionada != -1) {
                    String nombreEntrenadorSeleccionado = tabla_usuarios.getValueAt(filaSeleccionada, 1).toString();
                    idEntrenadorSeleccionado = mBD.obtenerID(nombreEntrenadorSeleccionado);
                    mostrarDatos(idEntrenadorSeleccionado);
                }
            }
        });
    }

    public void primerEntrenador(){
        try {
            String nombreEntrenadorSeleccionado = tabla_usuarios.getValueAt(0, 1).toString();
            idEntrenadorSeleccionado = mBD.obtenerID(nombreEntrenadorSeleccionado);
            mostrarDatos(idEntrenadorSeleccionado);
        } catch (Exception e) {
            Dialogo dialogo = new Dialogo(this,true);
            dialogo.setMensaje("No hay otros entrenadores registrados");
        }
    }

    public void mostrarDatos(String idEntrenadorSeleccionado){
        ArrayList imagenUser = mBD.cargarImagen(idEntrenadorSeleccionado);
        byte[] imagen = (byte[]) imagenUser.get(0);
        try {
            InputStream is = new ByteArrayInputStream(imagen);
            BufferedImage bufferedImage = ImageIO.read(is);
            ImageIcon mFoto = new ImageIcon(bufferedImage.getScaledInstance(250, 250, bufferedImage.SCALE_SMOOTH));
            perfil.setIcon(mFoto);
        } catch (Exception e) {
            System.out.println(e);
        }
        ArrayList datos = mBD.obtenerDatos(idEntrenadorSeleccionado);
        String nombre = datos.get(0).toString();
        String ganadas = datos.get(1).toString();
        String perdidas = datos.get(2).toString();
        nombre_label.setText("Nombre: " + nombre);
        ganadas_label.setText("Peleas ganadas: " + ganadas);
        perdidas_label.setText("Peleas perdidas: " + perdidas);
    }

}
